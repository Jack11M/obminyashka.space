## Server Properties
server.port=8080

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

## Spring Liquibase
spring.liquibase.change-log=classpath:liquibase/db.changelog-master.xml

### Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

## Spring View Resolver
spring.web.resources.static-locations=classpath:/react/build/
spring.mvc.view.suffix=.html

## JWT Properties
app.jwt.secret=JWTSuperSecretKey
## 2 seconds in milliseconds
app.access.jwt.expiration.time.ms=2000
## 4 seconds
app.refresh.jwt.expiration.time.seconds=4

spring.messages.basename=messages

app.image.thumbnail.edge.px=300

## Global variables
max.children.amount=10
max.images.amount=10
max.phones.amount=3
number.of.days.to.keep.deleted.users=7
location.init.file.path=src/main/resources/sql/fill-table-location.sql
test.data.location.init.file.path=src/test/resources/LocationCities.txt
cron.expression.once_per_day_at_3am=0 0 3 * * *

## Date format
display.adv.date.format=dd.MM.yyyy

## Google OAuth2
spring.security.oauth2.client.registration.google.client-id=google_client_id
spring.security.oauth2.client.registration.google.client-secret=google_client_secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email,phone

## Facebook OAuth2
spring.security.oauth2.client.registration.facebook.client-id=facebook_client_id
spring.security.oauth2.client.registration.facebook.client-secret=facebook_client_secret
spring.security.oauth2.client.registration.facebook.scope=openid,email,public_profile