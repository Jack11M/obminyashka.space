name: Obminyashka

on:
  push:
    branches: [ github-action ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          check-latest: true
          cache: maven

      - name: Run build with Maven
        run: mvn --batch-mode --update-snapshots package --quiet
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: ./target/space.obminyashka-*.jar
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    permissions:
      contents: read
      packages: write
    steps:
      - name: Upload Artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
      - name: Deploy over SSH
        uses: garygrossgarten/github-action-scp@release
        with:
          local: .
          remote: target
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}

  run:
    runs-on: ubuntu-latest
    needs: [ build, deploy ]
    environment: production
    steps:
      - name: Run artefact
        uses: appleboy/ssh-action@v0.1.8
        env:
          DB_PASSWORD: ${{ secrets.OBMINYASHKA_DATABASE_PASSWORD_SECRET }}
          SSL_PASSWORD: ${{ secrets.OBMINYASHKA_CERTIFICATE_PASSWORD_SECRET }}
          JWT_TOKEN_SECRET: ${{ secrets.OBMINYASHKA_TOKEN_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.OBMINYASHKA_ID_GOOGLE_API_SECRET }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.OBMINYASHKA_GOOGLE_SECRET }}
          SENDGRID_API_KEY: ${{ secrets.OBMINYASHKA_SENDGRID_SECRET }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            export DB_PASSWORD='${{ env.DB_PASSWORD }}'
            export SSL_PASSWORD='${{ env.SSL_PASSWORD }}'
            export JWT_TOKEN_SECRET='${{ env.JWT_TOKEN_SECRET }}'
            export GOOGLE_CLIENT_ID='${{ env.GOOGLE_CLIENT_ID }}'
            export GOOGLE_CLIENT_SECRET='${{ env.GOOGLE_CLIENT_SECRET }}'
            export SENDGRID_API_KEY='${{ env.SENDGRID_API_KEY }}'
            kill -9 $(lsof -t -i:8443) || echo "Process was not running."
            systemctl stop cge || echo "Process was not running."
            cp target/*.jar CGE-service/cge.jar
            java -jar ./target/*.jar 
              --server.ssl.key-store=/home/obmen/CGE-service/keystore.p12 \
              --logging.file.name=/home/obmen/CGE-service/LogFile.log

  inform:
    runs-on: ubuntu-latest
    needs: [ build, deploy, run ]
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            Repository: ${{ github.repository }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
